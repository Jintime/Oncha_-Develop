spring:
  jpa:
    hibernate:
      ddl-auto: update
    open-in-view: false
    show-sql: true

  security:
    oauth2:
      client:
        registration:
          google:
            scope:
              - email
              - profile

          facebook:
            scope:
              - email
              - public_profile #페이스북 문서 - 웹 페이스북 로그인 - 샘플 호출에서 public_profile 로 나와있음

          naver:
            scope:
              - name
              - email
              - profile_image
            client-name: Naver
            authorization-grant-type: authorization_code # 코드를 받는 방식
            redirect-uri: http://localhost:8080/login/oauth2/code/naver # 구글이나 페이스북은 설정이 되있기 때문에 안적어줘도되지만 네이버는 적어줘야함


          kakao:
            scope:
              - account_email
              - profile_image
              - profile_nickname
            client-name: Kakao
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao
            client-authentication-method: POST

        provider: #네이버 프로바이더가 없기 때문에 등록
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize # 네이버 api 문서 개발가이드에 있음- 네아로 주소 # 로그인 버튼 누르면 이주소가 호출 됨
            token-uri: https://nid.naver.com/oauth2.0/token # 네아로 접근 토큰 발급 요청
            user-info-uri: https://openapi.naver.com/v1/nid/me # 접근 토큰을 이용하여 프로필 api 호출하기
            user-name-attribute: response # 회원정보를 json으로 받는데 response라는 키값으로 네이버가 리턴해줌 #만약 이게 없으면 getAttribute 호출이 안됨 # 근데 response 안에 response 안에 response가 또잇을거임

          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://login-lecture.cindj3n0yfz1.ap-northeast-2.rds.amazonaws.com:3306/login_lecture
    username: admin
    password: vksek7827391

  data:
    redis:
      host: localhost
      port: 6379

jwt:
  header: Authorization
  secret: b25jaGEta2JqLWtqcy1zZWNyZXQtdG9rZW4tand0LW5vdHJlZnJlc2gtd2Utd2lsbC1jcmVhdGUtd2ViLXNpdGU=
  # 키가 256 bit보다 커야함 낮으면 weakKeyException 이 나타남
  token-validity-in-Mill-Seconds: 3000000 #토큰만료시간 8시간
  refresh-secret: YjI1amFHRXRhMkpxTFd0cWN5MXpaV055WlhRdGRHOXJaVzR0YW5kMExYSmxabkpsYzJndGQyVXRkMmxzYkMxamNtVmhkR1V0ZDJWaUxYTnBkR1U9
  refresh-validity-in-Mill-Seconds : 604800000